name: build & publish artifacts

on:
  push:
    branches: [ release ]

jobs:
  publish_core_lib_nuget_source:
      name: Publish core lib to nuget source
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - uses: kzrnm/get-net-sdk-project-versions-action@v1
        id: get-version
        with:
          proj-path: src/Ramos.ContentSecurityPolicy.NET/Ramos.ContentSecurityPolicy.NET.csproj

      - name: Publish
        run: >
          export VERSION=${{steps.get-version.outputs.version}};
          echo $VERSION;
          dotnet pack --configuration Release --include-source -p:SymbolPackageFormat=snupkg -p:ContinuousIntegrationBuild=true -p:Version=$VERSION -o out src/Ramos.ContentSecurityPolicy.NET;
          cd out;
          dotnet nuget push Ramos.ContentSecurityPolicy.NET.$VERSION.nupkg --force-english-output -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json;

  publish_web_lib_nuget_source:
      name: Publish web lib to nuget source
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - uses: kzrnm/get-net-sdk-project-versions-action@v1
        id: get-version
        with:
          proj-path: src/Ramos.ContentSecurityPolicy.NET.Web/Ramos.ContentSecurityPolicy.NET.Web.csproj

      - name: Publish
        run: >
          export VERSION=${{steps.get-version.outputs.version}};
          echo $VERSION;
          dotnet pack --configuration Release --include-source -p:SymbolPackageFormat=snupkg -p:ContinuousIntegrationBuild=true -p:Version=$VERSION -o out src/Ramos.ContentSecurityPolicy.NET.Web;
          cd out;
          dotnet nuget push Ramos.ContentSecurityPolicy.NET.$VERSION.Web.nupkg --force-english-output -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json;